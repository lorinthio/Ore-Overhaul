from core.component.persistent_timer import PersistentTimer
from core.template.animation import Frame, Frames
from core.plant.tree import ShakeAmount
from core.template.plant import SquirrelTree, TreeImage

from siege.util import PixelVector, minutes, seconds, Vector
from siege import InventoryItem

apple_crowns = [
    TreeImage("apple_crown1.png", center=67),
]

SquirrelTree(
    name = "Apple Tree",
    seed = 'apple_seed',
    spaceRequired = PixelVector(48, 34),
    saplings = [TreeImage("apple_sapling.png", center=11)],
    bases = [
        TreeImage("base.png", center=67)
    ],
    trunks = [
        TreeImage("trunk1.png", center=67),
        TreeImage("trunk2.png", center=67),
        TreeImage("trunk3.png", center=67)
    ],
    crowns = [
        TreeImage("crown1.png", center=67),
    ],
    shakeAmount = ShakeAmount.LITTLE,
)

def apple_treeReady(entity):
    self.render.resetTextures()
    spriteId = 1
    for image in self.bases + self.trunks + apple_crowns + self.saplings:
        image.spriteId = spriteId
        self.render.addTexture(spriteId, image.path, image.rect)
        spriteId += 1


apple_tree.add(PersistentTimer(minutes(60), apple_treeReady))


@apple_tree.hasEvent
def interact(player, entity, position):
    if entity.animation.getAnimationName() == 'ready':
        realm = entity.realm
        realm.dropped.create(InventoryItem('apple'), entity.getPosition(), Vector(0, -8), seconds(1))
        entity.animation.play('picked')
